# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

commands:
  destroy-k8s:
    description: Destroy stack given a workflow ID.
    parameters:
      to:
        type: string
        default: "temporal-helloworkflow"
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
              eksctl delete cluster --name=<<parameters.to>>
jobs:
  build_dockerfile:
    docker:
      - image: cimg/base
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: build dockerfile
          command: |
              cd ~/project
              # add env file
              chmod +x run_docker.sh
              ./run_docker.sh

  deploy_to_kubernetes:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo pip3 install awscli
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version

      - setup_remote_docker
      - run:
          name: build docker image to ECR
          command: |
            cd ~/project
            # add env file
            
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_REPOSITORY_URL}
            docker build -t temporalhelloworkflow .
            docker images
            docker tag temporalhelloworkflow:latest ${AWS_REPOSITORY_URL}/${REPOSITORY_NAME}:latest
            docker push ${AWS_REPOSITORY_URL}/${REPOSITORY_NAME}:latest

      - run:
          name: Prepare K8S templates
          command: |
            eksctl create cluster -f ~/project/.circleci/k8s/cluster.yml --kubeconfig=~\.kube\config   
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name eks-temporalhelloworkflow
      - run:
          name: Deploy to EKS
          command: |
            kubectl create namespace default-temporalhelloworkflow
            kubectl apply -n default-temporalhelloworkflow -f ~/project/.circleci/k8s/deployment.yml
            kubectl get deployments
      - run:
          name: Accessing the Application
          command: |
              kubectl apply -n default-temporalhelloworkflow -f ~/project/.circleci/k8s/service.yml
              # wait till the loadbalancer service is ready
              sleep 100
              kubectl get all --namespace default-temporalhelloworkflow
      - destroy-k8s
     
workflows:
  default:
    jobs:
      - build_dockerfile
      - deploy_to_kubernetes:
            requires: [build_dockerfile]
